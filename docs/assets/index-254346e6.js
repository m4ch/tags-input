(function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const t of document.querySelectorAll('link[rel="modulepreload"]'))n(t);new MutationObserver(t=>{for(const i of t)if(i.type==="childList")for(const o of i.addedNodes)o.tagName==="LINK"&&o.rel==="modulepreload"&&n(o)}).observe(document,{childList:!0,subtree:!0});function s(t){const i={};return t.integrity&&(i.integrity=t.integrity),t.referrerPolicy&&(i.referrerPolicy=t.referrerPolicy),t.crossOrigin==="use-credentials"?i.credentials="include":t.crossOrigin==="anonymous"?i.credentials="omit":i.credentials="same-origin",i}function n(t){if(t.ep)return;t.ep=!0;const i=s(t);fetch(t.href,i)}})();class r{constructor(e,s){this.options={createOnElementWithsSelector:null,defaultPossibleTags:[],defaultSelectedTags:[],elementLabel:"",questionMarkHelpText:""},this.fileInputName=e;const{createOnElementWithsSelector:n,defaultPossibleTags:t,defaultSelectedTags:i,elementLabel:o,questionMarkHelpText:l}=s;this.options.createOnElementWithsSelector=n??null,this.options.defaultSelectedTags=i??[],this.options.defaultPossibleTags=t??[],this.options.questionMarkHelpText=l??"Napište klíčové slovo a stiskněte čárku nebo enter. Můžete také vybrat předvolená klíčová slova níže.",this.options.elementLabel=o??"Klíčová slova",this.selectedTags=[...this.options.defaultSelectedTags],this.possibleTags=[...this.options.defaultPossibleTags],this.options.createOnElementWithsSelector?this.contentElement=document.querySelector(this.options.createOnElementWithsSelector):(this.contentElement=document.createElement("div"),this.contentElement.setAttribute("data-tags-input",this.fileInputName)),this.createElements(),this.bindEvents()}bindEvents(){this.contentElement.addEventListener("keyup",e=>{const s=e.target;if(s&&(e.key==="Enter"||e.key===",")){const n=s.value.replace(",",""),t={id:n,label:n};s.value="",this.addTagToSelected(t),this.contentElement.querySelector('input[type="text"]').focus()}}),this.contentElement.addEventListener("click",e=>{var n;const s=e.target;s&&(s.matches(".tag-remove")&&(this.moveTagFromSelectedToPossible((n=s.parentElement)==null?void 0:n.getAttribute("data-tag-id")),this.refreshComponent()),s.matches(".tag-possibility")&&(this.moveTagFromPossibleToSelected(s.getAttribute("data-tag-id")),this.refreshComponent()))})}refreshComponent(){this.contentElement.innerHTML=this.getComponentHtml()}moveTagFromSelectedToPossible(e){const s=this.selectedTags[this.findIndexOfItemById(e,this.selectedTags)];this.possibleTags.push(s),this.selectedTags.splice(this.findIndexOfItemById(e,this.selectedTags),1)}moveTagFromPossibleToSelected(e){const s=this.possibleTags[this.findIndexOfItemById(e,this.possibleTags)];this.selectedTags.push(s),this.possibleTags.splice(this.findIndexOfItemById(e,this.possibleTags),1)}findIndexOfItemById(e,s){let n=-1;return s.forEach((t,i)=>{t.id.toString()===e&&(n=i)}),n}getComponentHtml(){return console.log(this.fileInputName),`
      <div class="tags-input-wrapper"> 
        <label for="tagsInput_${this.fileInputName}">${this.options.elementLabel}</label>
        <div class="tags-container" id="tagsInput_${this.fileInputName}wrapper">
          <div class="tags-selected-wrapper">
            ${this.selectedTags.map(e=>`<div class="tag" data-tag-id="${e.id}">
                <span class="tag-text">${e.label}</span>
                <span class="tag-remove">X</span>
                </div>`).join("")}
          </div>
          <input class="form-control" id="tagsInput_${this.fileInputName}" name="${this.fileInputName}" type="text">
          <div class="" data-title="${this.options.questionMarkHelpText}">
          </div>
        </div>
        <div class="Tags-available" id="available-tags">
          ${this.possibleTags.map(e=>`<div class="tag tag-possibility" data-tag-id="${e.id}">${e.label}</div>`).join("")}
        </div>
      </div>
    `}addTagToPossibilities(e){this.possibleTags.push(e),this.refreshComponent()}addTagToSelected(e){this.selectedTags.push(e),this.refreshComponent()}createElements(){this.refreshComponent()}}const c=new r("tags_input",{createOnElementWithsSelector:"#tags_input"});console.log(c);
